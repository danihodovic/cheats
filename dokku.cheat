% dokku

$ app: 		ssh dokku@$DOKKU_HOST apps --- --header-lines 1
$ postgres:  	ssh dokku@$DOKKU_HOST postgres:list --- --header-lines 1

# Add an SSH key to dokku (must be done on the remote host)
cat ~/.ssh/authorized_keys | dokku ssh-keys:add admin

# List dokku apps
ssh dokku@$DOKKU_HOST apps

# Set the dokku docker build directory
ssh dokku@$DOKKU_HOST builder:set <app> build-dir my_subdirectory

# Add a domain to an app
ssh dokku@$DOKKU_HOST domains:add <app> app.com

# Set environment variables
ssh dokku@$DOKKU_HOST config:set <app> KEY1=VALUE1 KEY2=VALUE2

# Show enviornment variables
ssh dokku@$DOKKU_HOST config:show <app>

# Enter an app
dokku enter django-allauth-ui web

# Show logs for an app
ssh dokku@$DOKKU_HOST logs <app> -t -n 100

# Show deployment failure logs for an app
ssh dokku@$DOKKU_HOST logs logs:failed <app>

# Show the ssl certificate for an app
ssh dokku@$DOKKU_HOST certs:show node-js-app key > server.key

# Install the lets encrypt plugin
ssh dokku@$DOKKU_HOST plugin:install https://github.com/dokku/dokku-letsencrypt.git

# Renew a certificate
ssh dokku@$DOKKU_HOST letsencrypt:enable <app>

# Obtain a certificate
ssh dokku@$DOKKU_HOST -t letsencrypt:set <app> email your@email.tld && ssh dokku@$DOKKU_HOST letsencrypt:enable <app>

# List postgres services
ssh dokku@$DOKKU_HOST postgres:list

# Create a postgres service
ssh dokku@$DOKKU_HOST postgres:create mypostgres

# Delete a postgres service
ssh dokku@$DOKKU_HOST postgres:destroy <postgres>

# Connect to a postgres service (has to be run on the Dokku host!)
ssh dokku@$DOKKU_HOST postgres:connect <postgres>

# Link an app to a postgres service
ssh dokku@$DOKKU_HOST postgres:link <postgres> <app>
