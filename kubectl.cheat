% kubectl

$ namespace: kubectl get namespace --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ deployment: kubectl get deployment --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Change the kubectl k8s namespace
kubectl config set-context --current --namespace=<namespace>
$ namespace: kubectl get namespace --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Port forward kubectl proxy
kubectl port-forward service/<service> 80:80
$ service: kubectl get svc --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Describe a specific kubernetes pod
kubectl describe po <pod>
$ pod: kubectl get po --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Start the kubernetes web ui proxy dashboard
kubectl proxy

# List ingresses in all kubernetes kubectl namespaces
kubectl get ingress --all-namespaces

# Show node CPU and memory usage with kubectl top in kubernetes
watch -n 1 'kubectl top node'

# Enter a bash shell inside a container kubectl kubernetes exec
kubectl exec -it <pod> -- bash

# Enter a django shell inside a container kubectl kubernetes exec
kubectl exec -it <pod> -- ./manage.py shell_plus

# List all kubernetes k8s namespaces
kubectl get namespace

# Get kubernetes secret contents and data
k get secret htpasswd -o jsonpath='{.data}'
$ secret: get get secret --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Run a container interactively in kubernetes
kubectl run -i --tty busybox --image=busybox --restart=Never -- sh

# Rollout restart a pod deployment
kubectl rollout restart deployment/hodovich

# Run a ssh shell on a kubernetes node
kubectl node-shell <node>
$ node: kubectl get node --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Install a kubectl krew plugin
kubectl krew install <krew-plugin>
$ krew-plugin: kubectl krew search --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Sniff on pod traffic using kubectl
kubectl sniff <pod> -f "port 80" -o - | tshark -r -

# Run kubectl popeye to get a cluster score
kubectl popeye

# Delete all resource in a namespace
kubectl delete all --all --namespace <namespace>

# Get pods sorted by node
kubectl get pods -o wide --sort-by="{.spec.nodeName}"

# Open the kube traefik dashboard
$ traefik_namespace: kubectl get pod --all-namespaces | rg '\straefik' --- --column 1 --delimiter '\s\s+'
$ traefik_pod: kubectl get pod --all-namespaces | rg '\straefik' --- --column 2 --delimiter '\s\s+'
kubectl port-forward <traefik_pod> -n <traefik_namespace> 9000:9000

# Remove the bind for a persistent volume
kubectl patch pv postgres -p '{"spec":{"claimRef": null}}'

# Copy a file or directory
kubectl cp --retries=5 <pod>:/app/data.json.gz data.json.gz
