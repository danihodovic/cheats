% kubectl

$ namespace: kubectl get namespace --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ deployment: kubectl get deployment --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ statefulset: kubectl get statefulset --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ service: kubectl get service --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ pod: kubectl get po --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ configmap: kubectl get configmap --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ secret: kubectl get secret --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ ingress: kubectl get ingress --- --column 1 --header-lines 1 --delimiter '\s\s+'
$ node: kubectl get nodes --- --column 1 --header-lines 1 --delimiter '\s\s+'

# List kubernetes resources
kubectl api-resources

# Change the kubectl k8s namespace
kubens

# Port forward kubectl proxy
kubectl port-forward service/<service> 80:80

# Get pods
vd kubectl get pod

# Get pods in all namespaces
kubectl get pod -L app.kubernetes.io/name --all-namespaces

# Describe a pod
vd kubectl describe po <pod>

# Start the kubernetes web ui proxy dashboard
kubectl proxy

# List services
vd kubectl get service

# Describe a service
vd kubectl describe service <service>

# List endpoints
vd kubectl get endpoints

# List ingress
vd kubectl get ingress

# Describe an ingress
vd kubectl describe ingress <ingress>

# Show node CPU and memory usage with kubectl top in kubernetes
watch -n 1 'kubectl top node'

# Enter a bash shell
kubectl exec -it <pod> -- bash

# Enter a django shell
kubectl exec -it <pod> -- ./manage.py shell_plus

# List all kubernetes k8s namespaces
kubectl get namespace

# Get configmap
kubectl get configmap

# Describe configmap
kubectl describe configmap <configmap>

# Get secrets
kubectl get secret

# Describe secret
kubectl describe secret <secret>

# Get secret contents
kubectl get secret <secret> -o jsonpath='{.data}'

# Run a container interactively in kubernetes
kubectl run -i --tty busybox --image=busybox --restart=Never -- sh

# List deployments
vd kubectl get deploy

# Describe a deployment
vd kubectl describe deploy <deployment>

# Rollout restart a pod deployment
kubectl rollout restart deployment/hodovich

# Run a ssh shell on a kubernetes node
kubectl node-shell <node>
$ node: kubectl get node --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Install a kubectl krew plugin
kubectl krew install <krew-plugin>
$ krew-plugin: kubectl krew search --- --column 1 --header-lines 1 --delimiter '\s\s+'

# Sniff on pod traffic using kubectl
kubectl sniff <pod> -f "port 80" -o - | tshark -r -

# Run kubectl popeye to get a cluster score
kubectl popeye

# Delete all resource in a namespace
kubectl delete all --all --namespace <namespace>

# Get pods sorted by node
vd kubectl get pods -o wide --sort-by="{.spec.nodeName}"

# Open the kube traefik dashboard
$ traefik_namespace: kubectl get pod --all-namespaces | rg '\straefik' --- --column 1 --delimiter '\s\s+'
$ traefik_pod: kubectl get pod --all-namespaces | rg '\straefik' --- --column 2 --delimiter '\s\s+'
kubectl port-forward <traefik_pod> -n <traefik_namespace> 9000:9000

# Remove the bind for a persistent volume
kubectl patch pv postgres -p '{"spec":{"claimRef": null}}'

# Copy a file or directory
kubectl cp --retries=5 <pod>:/app/data.json.gz data.json.gz

# List Kubernetes events
viddy "kubectl get events --sort-by='.lastTimestamp' | tac"

# Output a certificate from a secret to disk
kubectl get secret <secret> -o jsonpath='{.data.tls\.crt}' | base64 --decode > /tmp/cert.crt

# List nodes
kubectl get nodes -o wide

# Describe a node
kubectl describe node <node>

# List statefulsets
kubectl get statefulset

# Describe statefulset
vd kubectl describe statefulset <statefulset>
